name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE: ilyass33/myapp:${{ github.sha }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          registry: docker.io

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./bulletin-board-app
          file: ./bulletin-board-app/Dockerfile
          tags: ${{ env.DOCKER_IMAGE }}, ilyass33/myapp:latest
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64  # Spécifiez l'architecture

  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Kubernetes tools
        uses: azure/setup-kubectl@v3
        with:
            version: "v1.31.6"  # Correspond à la version du cluster
            architecture: "amd64"  # Architecture des nœuds (Ubuntu x86-64)

      - name: Configure access
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" | base64 --decode > ~/.kube/config
          kubectl cluster-info

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout restart deployment/myapp  # Redémarrage progressif
          kubectl wait --for=condition=Available deployment/myapp --timeout=300s